version: '3.8'

services:
  oidc-auth:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: oidc-auth
    ports:
      - "8080:8080"
    environment:
      - SERVER_SESSION_SECRET=${SERVER_SESSION_SECRET:-your-super-secret-session-key-at-least-32-characters-long}
      - GIN_MODE=release
      
      - DATABASE_TYPE=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-postgres123}
      - DATABASE_DBNAME=auth
      
      - AUTH_ENDPOINT=${AUTH_ENDPOINT:-http://localhost:8000}
      - AUTH_CLIENT_ID=${AUTH_CLIENT_ID:-your-client-id}
      - AUTH_CLIENT_SECRET=${AUTH_CLIENT_SECRET:-your-client-secret}
      - AUTH_REDIRECT_URL=${AUTH_REDIRECT_URL:-http://localhost:8080/oidc_auth/plugin/login/callback}
      - AUTH_LOGIN_SUCCESS_URL=${AUTH_LOGIN_SUCCESS_URL:-http://localhost:8000/login/success}
      
      - GITHUB_STAR_ENABLED=${GITHUB_STAR_ENABLED:-false}
      - GITHUB_STAR_PERSONNEL_TOKEN=${GITHUB_STAR_PERSONNEL_TOKEN:-}
      - GITHUB_STAR_OWNER=${GITHUB_STAR_OWNER:-ultralytics}
      - GITHUB_STAR_REPO=${GITHUB_STAR_REPO:-ultralytics}
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - oidc-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres-oidc
    environment:
      - POSTGRES_DB=auth
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-postgres123}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auth"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - oidc-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  oidc-network:
    driver: bridge 